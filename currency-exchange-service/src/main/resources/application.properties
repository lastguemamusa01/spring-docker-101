
## put name the application
spring.application.name=currency-exchange


## configure the port of this server
server.port = 8000


## debug sql statement
spring.jpa.show-sql=true
spring.h2.console.enabled=true

## for new springboot you need to denine this for h2
spring.datasource.url=jdbc:h2:mem:testdb

## use data.sql for spring boot new version
spring.jpa.defer-datasource-initialization=true


## configure url for eureka server - for connect specific or another server
## for local host in perfonal machine
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
## for docker container
## eureka.client.serviceUrl.defaultZone=http://naming-server:8761/eureka


## custom the number of maximum retry calling by retry name is 5
## (old) resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.maxAttempts=5

## time to wait - interval between fails from each call - 1 seconds
resilience4j.retry.instances.sample-api.waitDuration=1s

## exponential backoff - multiple the time interval to double
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

## circuit breaker - when 90% of request fail, switch to open state
resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

## rate limiter config - 2 request per 10 seconds
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

## bulkhead config - maximum 10 concurrent call, sample api is the name
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10

## samplig configuration for distributed tracing, trace every request 1.0
## for the production 0.05 is 5 %
spring.sleuth.sampler.probability=1.0

## for the tracing server is in another url
##spring.zipkin.baseUrl=http://locahost:9411/

## configuring zipkin use rabbit mq
## spring.zipkin.sender.type=rabbit